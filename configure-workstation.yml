---
- name: Configure workstation VM
  hosts: localhost
  become: true
  tasks:
    - name: Include additional variables
      include_vars: "{{ vars_file }}"
      when: vars_file is defined

    - name: Install software
      dnf:
        name:
          - gnome-tweaks
          - python3-psutil
        state: latest

    - name: Make Regular Directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_env['USERNAME'] }}"
        group: "{{ ansible_env['USERNAME'] }}"
        mode: 0775
      loop:
        - ~{{ ansible_env['USERNAME'] }}/bin

    - name: Make Secure Directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_env['USERNAME'] }}"
        group: "{{ ansible_env['USERNAME'] }}"
        mode: 0700
      loop:
        - ~{{ ansible_env['USERNAME'] }}/.config

    - name: Configure aliases
      blockinfile:
        path: ~{{ ansible_env['USERNAME'] }}/.bashrc
        marker: "# {mark} ANSIBLE MANAGED BLOCK ALIASES"
        block: "{{ lookup('file', 'files/bashrc_aliases') }}"
        owner: "{{ ansible_env['USERNAME'] }}"
        group: "{{ ansible_env['USERNAME'] }}"
        mode: 0644
        state: present

    - name: Use 12-hour clock format instead of 24-hour
      become: true
      become_user: "{{ ansible_env['USERNAME'] }}"
      dconf:
        key: "/org/gnome/desktop/interface/clock-format"
        value: "'12h'"

    - name: Display seconds in the top-bar clock
      become: true
      become_user: "{{ ansible_env['USERNAME'] }}"
      dconf:
        key: "/org/gnome/desktop/interface/clock-show-seconds"
        value: "true"

    - name: Enable the gnome-tweaks extension that shows the window list
      become: true
      become_user: "{{ ansible_env['USERNAME'] }}"
      dconf:
        key: "/org/gnome/shell/enabled-extensions"
        value: "['window-list@gnome-shell-extensions.gcampax.github.com']"

    - name: Turn off keyboard repeats
      become: true
      become_user: "{{ ansible_env['USERNAME'] }}"
      dconf:
        key: "/org/gnome/desktop/peripherals/keyboard/repeat"
        value: "false"

    - name: Set favorites
      become: true
      become_user: "{{ ansible_env['USERNAME'] }}"
      dconf:
        key: "/org/gnome/shell/favorite-apps"
        value: "['firefox.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Terminal.desktop']"

    - name: Configure basic git settings
      become: true
      become_user: "{{ ansible_env['USERNAME'] }}"
      git_config:
        scope: global
        name: "{{ item['name'] }}"
        value: "{{ item['value'] }}"
      loop: "{{ git }}"
      when: git is defined

    - name: Add GitHub keys for {{ git_fullname }}
      copy:
        content: "{{ item['data'] }}"
        dest: ~{{ ansible_env['USERNAME'] }}/.ssh/{{ item['name'] }}
        owner: "{{ ansible_env['USERNAME'] }}"
        group: "{{ ansible_env['USERNAME'] }}"
        mode: "{{ item['mode'] }}"
      when:
        - git is defined
        - github_keys is defined
      loop: "{{ github_keys }}"
      loop_control:
        label: Adding key {{ item['name'] }} to ~{{ ansible_env['USERNAME'] }}/.ssh/

    - name: Add block to ~{{ ansible_env['USERNAME'] }}/.ssh/config
      blockinfile:
        path: ~{{ ansible_env['USERNAME'] }}/.ssh/config
        owner: "{{ ansible_env['USERNAME'] }}"
        group: "{{ ansible_env['USERNAME'] }}"
        mode: 0644
        state: present
        create: true
        insertafter: EOF
        marker_begin: BEGIN GITHUB
        block: |
          Host github.com
            User git
            IdentityFile ~/.ssh/{{ item['name'] }}
            StrictHostKeyChecking accept-new
      when:
        - github_keys is defined
        - item['type'] == "private"
      loop: "{{ github_keys }}"
      loop_control:
        label: Adding github block to ~{{ ansible_env['USERNAME'] }}/.ssh/config

    # Customize vim, nano, and gedit to use:
    # - tabs instead of spaces
    # - tabs = 2 spaces
    # - auto indent
    - name: Customize .vimrc
      become: true
      become_user: "{{ item }}"
      copy:
        content: "set ai et ts=2 sts=2 sw=2 colorcolumn=80"
        dest: ~{{ item }}/.vimrc
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: 0644
      loop:
        - root
        - "{{ ansible_env['USERNAME'] }}"
        - student

    - name: Customize .nanorc
      become: true
      become_user: "{{ item }}"
      copy:
        content: |
          set tabsize 2
          set tabstospaces
          set autoindent
        dest: ~{{ item }}/.nanorc
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: 0644
      loop:
        - root
        - "{{ ansible_env['USERNAME'] }}"
        - student

    - name: Configure gedit settings
      become: true
      become_user: "{{ item[0] }}"
      vars:
        gedit_prefs:
          - key: /org/gnome/gedit/preferences/editor/insert-spaces
            value: "true"
          - key: /org/gnome/gedit/preferences/editor/tabs-size
            value: "uint32 2"
          - key: /org/gnome/gedit/preferences/editor/auto-indent
            value: "true" 
        users:
          - "{{ ansible_env['USERNAME'] }}"
          - student
      dconf:
        key: "{{ item[1]['key'] }}"
        value: "{{ item[1]['value'] }}"
      with_nested:
        - "{{ users }}"
        - "{{ gedit_prefs }}"
      loop_control:
        label: Configuring {{ item[1]['key'] }} for {{ item[0] }}.
