---
- name: Configure workstation VM
  hosts: localhost
  gather_facts: true
  vars:
    git_vars_file: /tmp/git.yml
  tasks:
    - name: Set distribution_version fact
      set_fact:
        distribution_version: "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}"

    - name: Include the appropriate variables
      include_vars: vars/{{ distribution_version }}.yml

    - name: Make Regular Directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: 0775
      loop:
        - "{{ ansible_env['HOME'] }}/bin"

    - name: Make Secure Directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: 0700
      loop:
        - "{{ ansible_env['HOME'] }}/.config"
        - "{{ ansible_env['HOME'] }}/.ssh"

    - name: Configure font aliases
      blockinfile:
        path: "{{ ansible_env['HOME'] }}/.bashrc"
        marker: "# {mark} ANSIBLE MANAGED BLOCK FONT ALIASES"
        block: "{{ lookup('file', 'files/bashrc_aliases_font') }}"
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: 0644
        state: present

    - name: Configure spellr aliases
      blockinfile:
        path: "{{ ansible_env['HOME'] }}/.bashrc"
        marker: "# {mark} ANSIBLE MANAGED BLOCK SPELLR ALIASES"
        block: "{{ lookup('file', 'files/bashrc_aliases_spellr') }}"
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: 0644
        state: present

    - name: Extract Git variables
      template:
        src: templates/tmp-git.j2
        dest: "{{ git_vars_file }}"
      when: git is defined
      tags: git

    - name: Configure global Git settings
      vars:
        scope: global
      include_tasks: tasks/git.yml
      tags: git

    - name: Add file to /etc/motd.d
      become: true
      vars:
        width: 78
        message: "This system is being used by {{ git['user']['name'] }}!"
        left_pad: "{{ (width - (message | length)) // 2 }}"
        right_pad: "{{ ((width - (message | length)) // 2) + ((width - (message | length)) % 2) }}"
        formatted_msg: "=={% for x in range((left_pad|int) - 1) %} {% endfor %}{{ message }}{% for y in range((right_pad|int) - 1) %} {% endfor %}=="
      template:
        src: templates/motd
        dest: /etc/motd.d/{{ git['user']['email'] | regex_replace('@.*') }}
      when: git is defined

    - name: Modify .bashrc to change PS1 prompt for git
      blockinfile:
        path: "{{ ansible_env['HOME'] }}/.bashrc"
        marker: "# {mark} ANSIBLE MANAGED BLOCK PS1"
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: 0644
        state: present
        block: "{{ lookup('file', 'files/bashrc_git') }}"
      tags: ps1

    - name: Modify .bashrc to add the local-git function
      blockinfile:
        path: "{{ ansible_env['HOME'] }}/.bashrc"
        marker: "# {mark} ANSIBLE MANAGED BLOCK LOCAL-GIT"
        block: "{{ lookup('file', 'files/bashrc_local_git') }}"
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: 0644
        state: present

    - name: Add GitHub keys for {{ git_fullname }}
      copy:
        content: "{{ item['data'] }}"
        dest: "{{ ansible_env['HOME'] }}/.ssh/{{ item['name'] }}"
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: "{{ item['mode'] }}"
      when:
        - git is defined
        - github_keys is defined
      loop: "{{ github_keys }}"
      loop_control:
        label: Adding key {{ item['name'] }} to {{ ansible_env['HOME'] }}/.ssh/

    - name: Check for .git/config
      stat:
        path: "{{ ansible_env['PWD'] }}/.git/config"
      register: git_config

    - name: "Change 'https://github.com/' to 'git@github.com:'"
      lineinfile:
        path: "{{ ansible_env['PWD'] }}/.git/config"
        regexp: '^(.*)url = https://github.com/(.*)$'
        line: '\1url = git@github.com:\2'
        backrefs: True
      when:
        - github_keys is defined
        - git_config.stat.exists

    - name: Configure SSH for GITHUB
      block:
        - name: Create {{ ansible_env['HOME'] }}/.ssh/config.d
          file:
            path: "{{ ansible_env['HOME'] }}/.ssh/config.d"
            owner: "{{ ansible_env['LOGNAME'] }}"
            group: "{{ ansible_env['LOGNAME'] }}"
            mode: '0775'
            state: directory

        - name: Add 'include' line to {{ ansible_env['HOME'] }}/.ssh/config
          lineinfile:
            path: "{{ ansible_env['HOME'] }}/.ssh/config"
            regexp: '^[Ii]nclude'
            line: 'include ~/.ssh/config.d/*.conf'
            insertbefore: BOF
            state: present

        - name: Update SSH configuration for GitHub Host
          blockinfile:
            path: "{{ ansible_env['HOME'] }}/.ssh/config.d/github.conf"
            marker: "# {mark} ANSIBLE MANAGED BLOCK GITHUB"
            block: "{{ lookup('template', 'templates/ssh_config.j2') }}"
            insertafter: EOF
            owner: "{{ ansible_env['LOGNAME'] }}"
            group: "{{ ansible_env['LOGNAME'] }}"
            mode: '0644'
            create: true
            state: present
            setype: ssh_home_t

        - name: Configure 'mykeys' function
          blockinfile:
            path: "{{ ansible_env['HOME'] }}/.bashrc"
            marker: "# {mark} ANSIBLE MANAGED BLOCK MYKEYS FUNCTION"
            block: "{{ lookup('template', 'templates/mykeys.j2') }}"
            owner: "{{ ansible_env['LOGNAME'] }}"
            group: "{{ ansible_env['LOGNAME'] }}"
            mode: '0644'
            state: present
      when: github_keys is defined

    - name: Customize .vimrc
      become: true
      become_user: student
      copy:
        src: files/vimrc
        dest: "~student/.vimrc"
      tags: editors
      ignore_errors: True

    - block:
        - name: Check for GitHub CLI repository
          stat:
            path: /etc/yum.repos.d/gh-cli.repo
          register: gh_cli
          tags: github

        - name: Enable GitHub CLI repository
          become: true
          uri:
            url: https://cli.github.com/packages/rpm/gh-cli.repo
            return_content: true
            dest: /etc/yum.repos.d/gh-cli.repo
          when: gh_cli['stat']['exists'] | bool == False
          tags: github

        - name: Install software
          become: true
          dnf:
            name: "{{ additional_packages }}"
            state: latest

        - name: Check for GitHub completion file
          stat:
            path: /etc/bash_completion.d/gh-cli
          register: gh_cli_completion
          tags: github

        - name: Generate GitHub CLI completion
          become: true
          shell: gh completion -s bash > /etc/bash_completion.d/gh-cli
          when: gh_cli_completion['stat']['exists'] | bool == False
          tags: github

        - name: Use 12-hour clock format instead of 24-hour
          become: true
          become_user: "{{ ansible_env['LOGNAME'] }}"
          command: "gsettings set org.gnome.desktop.interface clock-format '12h'"
          changed_when: false
          #dconf:
          #  key: "/org/gnome/desktop/interface/clock-format"
          #  value: "'12h'"

        - name: Display seconds in the top-bar clock
          become: true
          become_user: "{{ ansible_env['LOGNAME'] }}"
          command: "gsettings set org.gnome.desktop.interface clock-show-seconds true"
          changed_when: false
          #dconf:
          #  key: "/org/gnome/desktop/interface/clock-show-seconds"
          #  value: "true"

        - name: Enable the gnome-tweaks extension that shows the window list
          vars:
            rhel_version:
              - "8.4"
              - "8.5"
              - "8.6"
          become: true
          become_user: "{{ ansible_env['LOGNAME'] }}"
          command:
            argv:
              - gsettings
              - set
              - org.gnome.shell
              - enabled-extensions
              - "['window-list@gnome-shell-extensions.gcampax.github.com']"
          changed_when: false
          when:
            - "ansible_facts['distribution'] == 'RedHat'"
            - ansible_facts['distribution_version'] in rhel_version
          #dconf:
          #  key: "/org/gnome/shell/enabled-extensions"
          #  value: "['window-list@gnome-shell-extensions.gcampax.github.com']"

        - name: Enable the gnome-extensions extension that shows the window list
          vars:
            rhel_version:
              - "9.0"
          become: true
          become_user: "{{ ansible_env['LOGNAME'] }}"
          command:
            argv:
              - gnome-extensions
              - enable
              - window-list@gnome-shell-extensions.gcampax.github.com
          changed_when: false
          when:
            - "ansible_facts['distribution'] == 'RedHat'"
            - ansible_facts['distribution_version'] in rhel_version
          #dconf:
          #  key: "/org/gnome/shell/enabled-extensions"
          #  value: "['window-list@gnome-shell-extensions.gcampax.github.com']"

        - name: Check for /etc/rht
          stat:
            path: /etc/rht
          register: rht

        - name: Set venue
          set_fact:
            venue: "{{ lookup('file', '/etc/rht') | regex_search('RHT_VENUE=.*') | regex_replace('RHT_VENUE=') | lower }}"
          when: rht['stat']['exists']|bool == True

        - name: Turn off keyboard repeats
          become: true
          become_user: "{{ ansible_env['LOGNAME'] }}"
          command: "gsettings set org.gnome.desktop.peripherals.keyboard repeat false"
          changed_when: false
          #dconf:
          #  key: "/org/gnome/desktop/peripherals/keyboard/repeat"
          #  value: "true"
          when:
            - venue is defined
            - venue == "rav" or venue == "novello"

        - name: Set favorites
          become: true
          become_user: "{{ ansible_env['LOGNAME'] }}"
          command:
            argv:
              - gsettings
              - set
              - org.gnome.shell
              - favorite-apps
              - "['firefox.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Terminal.desktop', 'org.gnome.Screenshot.desktop', 'code.desktop']"
          changed_when: false
          #dconf:
          #  key: "/org/gnome/shell/favorite-apps"
          #  value: "['firefox.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Terminal.desktop', 'org.gnome.Screenshot.desktop']"

        - name: Fix locked background
          become: true
          file:
            path: /etc/dconf/db/local.d/locks/00-default-wallpaper
            state: absent
          when: ansible_facts['distribution_version'] == "8.4" or ansible_facts['distribution_version'] == "8.5" or ansible_facts['distribution_version'] == "8.6"
          register: background_fix

        - name: Update dconf
          become: true
          command: dconf update
          #when: background_fix['changed'] | bool == True

        - name: Copy new background file
          become: true
          copy:
            src: files/bw-900-700.png
            dest: /home/student/Pictures/bw-900-700.png
          when: background_fix['changed'] | bool == True

        # Commenting out for now. Something about the value is wrong.
        - name: Set new background
          become: true
          become_user: "{{ ansible_env['LOGNAME'] }}"
          command:
            argv:
              - gsettings
              - set
              - org.gnome.desktop.background
              - picture-uri
              - 'file:///home/student/Pictures/bw-900-700.png'
          changed_when: false
        #  command: "gsettings set org.gnome.desktop.background picture-uri 'file:///home/student/Pictures/bw-900-700.png'"
        #  changed_when: false
        #  dconf:
        #    key: "/org/gnome/desktop/background/picture-uri"
        #    value: "file:///home/student/Pictures/bw-900-700.png"
          when: background_fix['changed'] | bool == True

        - name: Configure new keybindings for workspace switching (down)
          become: true
          become_user: "{{ ansible_env['LOGNAME'] }}"
          command:
            argv:
              - gsettings
              - set
              - org.gnome.desktop.wm.keybindings
              - switch-to-workspace-down
              - "['<Primary><Shift>Down']"
          tags: workspaces

        - name: Configure new keybindings for workspace switching (up)
          become: true
          become_user: "{{ ansible_env['LOGNAME'] }}"
          command:
            argv:
              - gsettings
              - set
              - org.gnome.desktop.wm.keybindings
              - switch-to-workspace-up
              - "['<Primary><Shift>Up']"
          tags: workspaces
