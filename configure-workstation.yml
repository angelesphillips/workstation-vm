---
- name: Configure workstation VM
  hosts: workstation
  become: true
  gather_facts: true
  vars:
    the_user: student
  vars_files:
    - vars.yml
  tasks:
    - name: Set distribution_version fact
      ansible.builtin.set_fact:
        distribution_major_version: >-
          {{ ansible_facts['distribution'] }}_{{
          ansible_facts['distribution_major_version'] }}.yml
        distribution_minor_version: >-
          {{ ansible_facts['distribution'] }}_{{
          ansible_facts['distribution_version'] }}.yml

    - name: Include the appropriate distribution variables
      ansible.builtin.include_tasks: tasks/distribution_vars.yml

    - name: Include the appropriate distribution tasks
      ansible.builtin.include_tasks: tasks/distribution_tasks.yml

    #- name: Collect package facts
    #  ansible.builtin.package_facts:

    - name: Install additional_packages
      when: additional_packages is defined
      ansible.builtin.dnf:
        name: "{{ additional_packages }}"
        state: present

    - name: Make regular directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ the_user }}"
        group: "{{ the_user }}"
        mode: "0755"
      loop:
        - ~{{ the_user }}/bin

    - name: Make secure directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ the_user }}"
        group: "{{ the_user }}"
        mode: "0700"
      loop:
        - ~{{ the_user }}/.config
        - ~{{ the_user }}/.ssh

    - name: Configure font aliases
      ansible.builtin.blockinfile:
        path: ~{{ the_user }}/.bashrc
        marker: "# {mark} ANSIBLE MANAGED BLOCK FONT ALIASES"
        block: "{{ lookup('file', 'files/bashrc_aliases_font') }}"
        owner: "{{ the_user }}"
        group: "{{ the_user }}"
        mode: "0644"
        state: present

    - name: Configure spellr aliases
      ansible.builtin.blockinfile:
        path: ~{{ the_user }}/.bashrc
        marker: "# {mark} ANSIBLE MANAGED BLOCK SPELLR ALIASES"
        block: "{{ lookup('file', 'files/bashrc_aliases_spellr') }}"
        owner: "{{ the_user }}"
        group: "{{ the_user }}"
        mode: "0644"
        state: present

    - name: Modify .bashrc to add the local-git function
      ansible.builtin.blockinfile:
        path: ~{{ the_user }}/.bashrc
        marker: "# {mark} ANSIBLE MANAGED BLOCK LOCAL-GIT"
        block: "{{ lookup('file', 'files/bashrc_local_git') }}"
        owner: "{{ the_user }}"
        group: "{{ the_user }}"
        mode: "0644"
        state: present

    - name: Configure 'mykeys' function
      when: github_keys is defined
      blockinfile:
        path: ~{{ the_user }}/.bashrc
        marker: "# {mark} ANSIBLE MANAGED BLOCK MYKEYS FUNCTION"
        block: "{{ lookup('template', 'templates/mykeys.j2') }}"
        owner: "{{ the_user }}"
        group: "{{ the_user }}"
        mode: '0644'
        state: present

    - name: Customize .vimrc
      ansible.builtin.copy:
        src: files/vimrc
        dest: "~{{ the_user }}/.vimrc"
        owner: "{{ the_user }}"
        group: "{{ the_user }}"
        mode: "0664"
      tags: editors
      ignore_errors: true

    - name: Use 12-hour clock format instead of 24-hour
      become: true
      become_user: "{{ the_user }}"
      ansible.builtin.command: >-
        gsettings set org.gnome.desktop.interface clock-format '12h'
      changed_when: false

    - name: Display seconds in the top-bar clock
      become: true
      become_user: "{{ the_user }}"
      ansible.builtin.command: >-
        gsettings set org.gnome.desktop.interface clock-show-seconds true
      changed_when: false

    - name: Venue block
      block:
        - name: Slurp /etc/rht
          ansible.builtin.slurp:
            path: /etc/rht
          register: slurp_rht

        - name: Set rht_content fact
          vars:
            line_delimiter: "\n"
          ansible.builtin.set_fact:
            rht_content: >-
              {{ slurp_rht['content'] | b64decode | split(line_delimiter) }}

        - name: Set venue fact
          vars:
            line_search: "^RHT_VENUE"
            line_match: >-
              {% for LINE in rht_content -%}
                {% if LINE | regex_search(line_search) | default(false, true) -%}
                  {{ LINE | split('=') | last }}
                {%- endif %}
              {%- endfor %}
          ansible.builtin.set_fact:
            venue: "{{ line_match | split('=') | last | lower }}"

        - name: Turn off keyboard repeats
          when:
            - venue is defined
            - venue == "rav" or venue == "novello"
          become: true
          become_user: "{{ the_user }}"
          ansible.builtin.command: >-
            gsettings set org.gnome.desktop.peripherals.keyboard repeat false
          changed_when: false

    - name: Set favorites
      become: true
      become_user: "{{ the_user }}"
      ansible.builtin.command:
        argv:
          - gsettings
          - set
          - org.gnome.shell
          - favorite-apps
          - "['firefox.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Terminal.desktop', 'org.gnome.Screenshot.desktop', 'code.desktop']"
      changed_when: false

    - name: Backgroud block
      block:
        - name: Copy new background file
          ansible.builtin.copy:
            src: files/bw-900-700.png
            dest: /home/{{ the_user }}/Pictures/bw-900-700.png
            owner: "{{ the_user }}"
            group: "{{ the_user }}"
            mode: "0664"

        - name: Set background primary-color
          become: true
          become_user: "{{ the_user }}"
          ansible.builtin.command:
            argv:
              - gsettings
              - set
              - org.gnome.desktop.background
              - primary-color
              - "'#000000000000'"

        - name: Set background picture-options
          become: true
          become_user: "{{ the_user }}"
          ansible.builtin.command:
            argv:
              - gsettings
              - set
              - org.gnome.desktop.background
              - picture-options
              - "zoom"

        - name: Set new background
          become: true
          become_user: "{{ the_user }}"
          ansible.builtin.command:
            argv:
              - gsettings
              - set
              - org.gnome.desktop.background
              - picture-uri
              - "file:///home/{{ the_user }}/Pictures/bw-900-700.png"
          changed_when: false

    - name: Workspaces block
      become: true
      become_user: "{{ the_user }}"
      tags: workspaces
      block:
        - name: Use 'control-shift-down' to move down workspaces
          ansible.builtin.command:
            argv:
              - gsettings
              - set
              - org.gnome.desktop.wm.keybindings
              - switch-to-workspace-down
              - "['<Primary><Shift>Down']"

        - name: Use 'control-shift-up' to move up workspaces
          ansible.builtin.command:
            argv:
              - gsettings
              - set
              - org.gnome.desktop.wm.keybindings
              - switch-to-workspace-up
              - "['<Primary><Shift>Up']"

        - name: Use 'control-shift-left' to move to workspace left
          ansible.builtin.command:
            argv:
              - gsettings
              - set
              - org.gnome.desktop.wm.keybindings
              - switch-to-workspace-left
              - "['<Primary><Shift>Left']"

        - name: Use 'control-shift-right' to move to workspace right
          ansible.builtin.command:
            argv:
              - gsettings
              - set
              - org.gnome.desktop.wm.keybindings
              - switch-to-workspace-right
              - "['<Primary><Shift>Right']"
